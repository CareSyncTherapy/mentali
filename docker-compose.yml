version: '3.8'

services:
  # Backend API Service
  backend:
    build: ./backend
    container_name: caresync-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production
    depends_on:
      - postgres
      - redis
    networks:
      - mentali-net
    volumes:
      - ./backend:/app
      - /app/__pycache__

  # Frontend Web Application
  frontend:
    build: ./frontend-web
    container_name: caresync-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_APP_VERSION=1.0.0
    depends_on:
      - backend
    networks:
      - mentali-net
    volumes:
      - ./frontend-web:/app
      - /app/node_modules

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: caresync-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mentali-net

  # Redis Cache
  redis:
    image: redis:7
    container_name: caresync-redis
    ports:
      - "6379:6379"
    networks:
      - mentali-net
    volumes:
      - redisdata:/data

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: caresync-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - mentali-net

volumes:
  pgdata:
  redisdata:

networks:
  mentali-net:
    driver: bridge 